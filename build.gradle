buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        maven {
            name "aliyun1"
            url 'http://maven.aliyun.com/nexus/content/groups/public'
        }
        maven {
            name "aliyun2"
            url 'http://maven.aliyun.com/mvn/repository/'
        }
        maven {
            name "spring repo"
            url "http://repo.spring.io/release"
        }
        maven {
            name "spring milestone"
            url "https://repo.spring.io/milestone/"
        }
        maven {
            name "spring snapshot"
            url "https://repo.spring.io/snapshot"
        }
        jcenter()
        mavenCentral()
        // springBoot gradle插件
        maven {
            url 'http://repos.zeroturnaround.com/nexus/content/groups/zt-public/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.github.spotbugs" version "1.6.1"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'checkstyle'

group = 'cn.telami'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

bootJar {
    baseName = 'uaa'

    manifest {
        attributes 'Implementation-Title': baseName,
                'Implementation-Version': version,
                'Built-By': System.getProperty('user.name'),
                'Built-Date': new Date(),
                'Built-JDK': System.getProperty('java.version')
    }
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

checkstyle {
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0

    dependencies {
        checkstyle "com.puppycrawl.tools:checkstyle:8.8"
        checkstyle "com.google.guava:guava:23.5-jre"
    }
}


tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
        html.stylesheet resources.text.fromFile('config/xsl/checkstyle-simple.xsl')
    }
}

repositories {
    maven { url "https://repo.spring.io/milestone" }

    maven {
        name "aliyun1"
        url 'http://maven.aliyun.com/nexus/content/groups/public'
    }
    maven {
        name "aliyun2"
        url 'http://maven.aliyun.com/mvn/repository/'
    }

    maven {
        name "spring repo"
        url "http://repo.spring.io/release"
    }
    maven {
        name "spring milestone"
        url "https://repo.spring.io/milestone/"
    }
    maven {
        name "spring snapshot"
        url "https://repo.spring.io/snapshot"
    }

    jcenter()
    mavenCentral()
    maven {
        url 'http://repos.zeroturnaround.com/nexus/content/groups/zt-public/'
    }
}

ext {
    springCloudVersion = 'Greenwich.M1'
}

dependencies {
    compile(
            'org.springframework.boot:spring-boot-starter-web',
            'org.springframework.boot:spring-boot-starter-actuator',
            'org.springframework.cloud:spring-cloud-starter-oauth2',
            "org.springframework.cloud:spring-cloud-starter-config",
            'org.springframework.session:spring-session-data-redis',
            'redis.clients:jedis:2.9.0',
            'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client',
            'com.baomidou:mybatis-plus-boot-starter:3.0.6',
            'mysql:mysql-connector-java:8.0.12',
            'com.alibaba:druid:1.1.10'
    )
    runtime('org.springframework.boot:spring-boot-devtools')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}
